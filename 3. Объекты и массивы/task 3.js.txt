// –ó–∞–¥–∞–Ω–∏–µ 3 - –û–±—å–µ–∫—Ç—ã –∏ –º–∞—Å—Å–∏–≤—ã

// –ó–∞–¥–∞–Ω–∏–µ: –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é groupByField, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –ø–æ–ª—é —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞. –ù–∞ –≤—Ö–æ–¥ –ø–æ—Å—Ç—É–ø–∞–µ—Ç –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –∏ —Å—Ç—Ä–æ–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω—É–∂–Ω–æ–≥–æ –ø–æ–ª—è, –Ω–∞ –≤—ã—Ö–æ–¥ –æ–±—ä–µ–∫—Ç - –≥–¥–µ –∫–ª—é—á–æ–º —è–≤–ª—è–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è –æ–±—ä–µ–∫—Ç–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º - –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –≥–¥–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø–æ–ª–µ —Ä–∞–≤–Ω–æ —ç—Ç–æ–º—É –∫–ª—é—á—É ü§™ (–Ω–∞–¥–µ—é—Å—å –≤ –ø—Ä–∏–º–µ—Ä–µ –±—É–¥–µ—Ç –ø–æ–Ω—è—Ç–Ω–µ–π). –ü—Ä–∏–º–µ—Ä:

// const arr = [{test: 1},{test: 2},{test: 3},{test: 1},{test: 1}]
// const res = groupByField(arr, 'test')
// console.log(res) // { 1: [{test: 1}, {test: 1}, {test: 1}], 2: [{test: 2}], 3: [{test: 3}]}

function groupByField(arr, field) {
  const groupedObj = {};
  for (let i = 0; i < arr.length; i++) {
    const obj = arr[i];
    const value = obj[field];
    if (groupedObj[value]) {
      groupedObj[value].push(obj);
    } else {
      groupedObj[value] = [obj];
    }
  }
  return groupedObj;
}

const arr = [{test: 1},{test: 2},{test: 3},{test: 1},{test: 1}];
const res = groupByField(arr, 'test');
console.log(res);